{
	"_method_": {
		"Export_AllTables": {
			"Syntax": "**Export_AllTables**( *num_workers* : Integer; *fields_to_base64* : Collection )->export_folder_platformPath : Text",
			"Params": [
				[
					"num_workers",
					"Integer",
					"->"
				],
				[
					"fields_to_base64",
					"Collection",
					"->"
				],
				[
					"export_folder_platformPath",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"Export_Import_Dialog": {
			"Syntax": "**Export_Import_Dialog**()",
			"Params": [],
			"Summary": ""
		},
		"Export_ListOfTables": {
			"Syntax": "**Export_ListOfTables**( *num_workers* : Integer; *table_no_list* : Collection; *fields_to_base64* : Collection )->export_folder_platformPath : Text",
			"Params": [
				[
					"num_workers",
					"Integer",
					"->"
				],
				[
					"table_no_list",
					"Collection",
					"->"
				],
				[
					"fields_to_base64",
					"Collection",
					"->"
				],
				[
					"export_folder_platformPath",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"Export_HealthCheck_Scan": {
			"Syntax": "**Export_HealthCheck_Scan**( *incoming_options* : Object )->export_folder_platformPath : Text",
			"Params": [
				[
					"incoming_options",
					"Object",
					"->"
				],
				[
					"export_folder_platformPath",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"Import_AllTables": {
			"Syntax": "**Import_AllTables**( *num_workers* : Integer; *options* : Object )->importFromFolder_platformPath : Text",
			"Params": [
				[
					"num_workers",
					"Integer",
					"->"
				],
				[
					"options",
					"Object",
					"->"
				],
				[
					"importFromFolder_platformPath",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"Export_PreCheck_RemoveBadChars": {
			"Syntax": "**Export_PreCheck_RemoveBadChars**( *incoming_options* : Object )->export_folder_platformPath : Text",
			"Params": [
				[
					"incoming_options",
					"Object",
					"->"
				],
				[
					"export_folder_platformPath",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"cs.ExportImport": {
		"Table_Exporter": {
			"new()": {
				"Syntax": "**.new**( *target_folder* : 4D.Folder )",
				"Params": [
					[
						"target_folder",
						"4D.Folder",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_Utils": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"HealthChecker": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"HealthCheckerWorker": {
			"new()": {
				"Syntax": "**.new**( *table_no* : Integer )",
				"Params": [
					[
						"table_no",
						"Integer",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"Record_Encoder_Decoder": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		}
	},
	"Table_Exporter": {
		"Set_File_Max_MB_Size()": {
			"Syntax": "**.Set_File_Max_MB_Size**( *max_mb* : Integer )",
			"Params": [
				[
					"max_mb",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"Export_All_Records()": {
			"Syntax": "**.Export_All_Records**( *table_no* : Integer ) : Object",
			"Params": [
				[
					"table_no",
					"Integer",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"Get_Target_Folder()": {
			"Syntax": "**.Get_Target_Folder**() : 4D.Folder",
			"Params": [
				[
					"",
					"4D.Folder",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"_Utils": {
		"Get_Named_Working_Folder()": {
			"Syntax": "**.Get_Named_Working_Folder**( *folder_name_root* : Text )->folder : 4D.Folder",
			"Params": [
				[
					"folder_name_root",
					"Text",
					"->"
				],
				[
					"folder",
					"4D.Folder",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"HealthChecker": {
		"Get_Target_Folder()": {
			"Syntax": "**.Get_Target_Folder**()->target_folder : 4D.Folder",
			"Params": [
				[
					"target_folder",
					"4D.Folder",
					"<-"
				]
			],
			"Summary": ""
		},
		"Set_Alpha_Field_Ptrs_to_Ignore_Bad_Chars()": {
			"Syntax": "**.Set_Alpha_Field_Ptrs_to_Ignore_Bad_Chars**( *field_ptrs_to_ignore* : Collection ) : cs.ExportImport.HealthChecker",
			"Params": [
				[
					"field_ptrs_to_ignore",
					"Collection",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthChecker",
					"<-"
				]
			],
			"Summary": ""
		},
		"Set_Tables_to_Check()": {
			"Syntax": "**.Set_Tables_to_Check**( *tables_to_scan* : Collection ) : cs.ExportImport.HealthChecker",
			"Params": [
				[
					"tables_to_scan",
					"Collection",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthChecker",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"HealthCheckerWorker": {
		"Set_Alpha_Field_Ptrs_to_Ignore_Bad_Chars()": {
			"Syntax": "**.Set_Alpha_Field_Ptrs_to_Ignore_Bad_Chars**( *field_ptrs_to_ignore* : Collection ) : cs.ExportImport.HealthCheckerWorker",
			"Params": [
				[
					"field_ptrs_to_ignore",
					"Collection",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthCheckerWorker",
					"<-"
				]
			],
			"Summary": ""
		},
		"Perform_Health_Check()": {
			"Syntax": "**.Perform_Health_Check**()->result_messages : Collection",
			"Params": [
				[
					"result_messages",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"Set_Progress_Hdl()": {
			"Syntax": "**.Set_Progress_Hdl**( *prog_hdl* : Integer ) : cs.ExportImport.HealthCheckerWorker",
			"Params": [
				[
					"prog_hdl",
					"Integer",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthCheckerWorker",
					"<-"
				]
			],
			"Summary": ""
		},
		"Set_to_Remove_Bad_Chars()": {
			"Syntax": "**.Set_to_Remove_Bad_Chars**( *do_remove* : Boolean ) : cs.ExportImport.HealthCheckerWorker",
			"Params": [
				[
					"do_remove",
					"Boolean",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthCheckerWorker",
					"<-"
				]
			],
			"Summary": ""
		},
		"Set_Folder()": {
			"Syntax": "**.Set_Folder**( *folder* : 4D.Folder ) : cs.ExportImport.HealthCheckerWorker",
			"Params": [
				[
					"folder",
					"4D.Folder",
					"->"
				],
				[
					"",
					"cs.ExportImport.HealthCheckerWorker",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"Record_Encoder_Decoder": {
		"Record_to_JSON()": {
			"Syntax": "**.Record_to_JSON**( *field_map* : Object; *entity* : 4D.Entity )->record_json : Object",
			"Params": [
				[
					"field_map",
					"Object",
					"->"
				],
				[
					"entity",
					"4D.Entity",
					"->"
				],
				[
					"record_json",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"JSON_to_Record()": {
			"Syntax": "**.JSON_to_Record**( *field_map* : Object; *record_json* : Text )->entity : 4D.Entity",
			"Params": [
				[
					"field_map",
					"Object",
					"->"
				],
				[
					"record_json",
					"Text",
					"->"
				],
				[
					"entity",
					"4D.Entity",
					"<-"
				]
			],
			"Summary": ""
		},
		"Field_Map_For_Table()": {
			"Syntax": "**.Field_Map_For_Table**( *table_name* : Text )->field_map : Object",
			"Params": [
				[
					"table_name",
					"Text",
					"->"
				],
				[
					"field_map",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		}
	}
}